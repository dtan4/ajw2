event:
  id: event01
  type: ajax
  trigger:
    target: submitBtn
    type: onClick
    params:
    - id: user_id
      type: string
      value:
        element: userIdTextBox
        func: getValue
        type: element
    - id: message
      type: string
      value:
        element: messageTextBox
        func: getValue
        type: element
  action:

    actions:
    - id: db01
      type: database
      database: messages
      func: create
      where: []
      fields:
      - field: user_id
        value:
          type: param
          id: user_id
      - field: message
        value:
          type: param
          id: message
    - id: if01
      type: interface
      element: messageTable
      func: appendElements
      params:
      - tag: tr
        children:
        - tag: td
          value:
            type: param
            id: user_id
        - tag: td
          text:
            type: param
            id: message
ruby: |
  post "/event01" do
    content_type :json
    response = { _db_errors: {} }
    user_id = params[:user_id]
    message = params[:message]
    db01 = Message.new(
      user_id: user_id, message: message
    )
    response[:_db_errors][:db01] = db01.errors.full_messages unless db01.save
    response[:if01] = {}
    response[:if01][:user_id] = user_id
    response[:if01][:message] = message
    response.to_json
  end
javascript: |
  $('#submitBtn').click(function() {
    var user_id = $('#userIdTextBox').val();
    var message = $('#messageTextBox').val();
    $.ajax({
      type: 'POST',
      url: '/event01',
      data: { 'user_id': user_id, 'message': message },
      beforeSend: function(_xhr) {
        _xhr.setRequestHeader("X-CSRF-Token", _csrf_token);
      },
      success: function(_msg) {
        if (Object.keys(_msg['_db_errors']).length == 0) {
          var if01 = _msg['if01'];
          $('#messageTable').append($('<tr>').append($('<td>').val(if01['user_id'])).append($('<td>').text(if01['message'])));
        } else {
        }
      },
      error: function(_xhr, _msg) {
        alert('XMLHttpRequest Error: ' + _msg);
      }
    });
  });
