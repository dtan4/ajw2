event:
  trigger:
    id: event01
    target: submitBtn
    type: onClick
    realtime: false
    params:
    - id: message
      type: string
      value:
        element: messageTextBox
        func: getValue
        type: element
  action:
    type: conditional
    condition:
      operand: gt
      left:
        type: param
        value:
          name: message
          type: string
      right:
        type: literal
        value:
          value: hoge
          type: string
    then:
      actions:
      - id: db01
        type: database
        database: messages
        func: create
        where: []
        fields:
        - field: message
          value:
            type: param
            id: message
      - id: if01
        type: interface
        element: messageLabel
        func: setValue
        value:
          type: param
          id: message
    else:
      actions: []
ruby: |
  post "/event01" do
    content_type :json
    response = { _db_errors: {} }
    message = params[:message]
    if (message > "hoge")
      db01 = Message.new(
        message: message
      )
      response[:_db_errors][:db01] = db01.errors.full_messages unless db01.save
      response[:if01] = message
      response[:result] = true
    else
      response[:result] = false
    end
    response.to_json
  end
